import { CommandInteraction, Message } from "discord.js";
import { TriviaGameOptions, TriviaManagerOptions } from "../Typings/interfaces";
import { TriviaManagerGames } from "../Typings/types";
import TriviaGame from "./TriviaGame";
/**
 * @class Class for creating and managing ongiong games.
 */
export default class TriviaManager {
    readonly games: TriviaManagerGames;
    readonly options: TriviaManagerOptions;
    static readonly defaults: TriviaManagerOptions;
    constructor(options?: TriviaManagerOptions);
    /**
     * Returns an instance of a TriviaGame
     * @param {CommandInteraction} interaction - The interaction to assign to the game.
     * @param {Partial<TriviaGameOptions>?} options - The configuration options to assign to the game (optional)
     */
    createGame(root: CommandInteraction | Message, options?: Partial<TriviaGameOptions>): TriviaGame;
    validator: {
        validateDiscordStructures(game: TriviaGame): void;
        validatePlayerCount(label: "minimumPlayerCount" | "maximumPlayerCount", val: unknown): void;
        checkPlayerCountRelation(min: number, max: number): void;
        validatePointRange(label: "minPoints" | "maxPoints", val: unknown): void;
        checkPointRangeRelation(min: number, max: number): void;
        validateTimePerQuestion(val: unknown): void;
        validateQuestionAmount(val: unknown): void;
        validateQuestionDifficulty(val: unknown): void;
        validateQuestionType(val: unknown): void;
        validateQueueTime(val: unknown): void;
        validatePointsPerStreakAmount(val: unknown): void;
        validateMaximumStreakBonus(val: unknown): void;
        validateGameOptions(obj: TriviaGameOptions): void;
    };
}
